{"version":3,"sources":["App.module.css","components/Navbar/Navbar.tsx","components/pages/Junior.tsx","components/pages/JuniorPlus.tsx","components/FirstTask/CloudMessageContainer.tsx","components/FirstTask/CloudMessage.tsx","components/common/Button.tsx","components/common/Checkbox.tsx","components/SecondTask/ListContainer.tsx","components/SecondTask/List.tsx","components/common/Input.tsx","components/ThirdTask/InputNameContainer.tsx","components/ThirdTask/InputName.tsx","components/pages/PreJunior.tsx","App.tsx","serviceWorker.ts","index.tsx","components/SecondTask/Lists.module.css","components/Navbar/Navbar.module.css","components/ThirdTask/InputName.module.css"],"names":["module","exports","Navbar","useState","isMenu","setMenu","rel","href","integrity","crossorigin","className","style","navbar","onClick","menu","btn_active","btn","navlink_active","navlink","to","activeClassName","active","Junior","src","width","height","frameBorder","allowFullScreen","JuniorPlus","CloudMessageContainer","props","hours","minutes","state","name","surname","img","message","mesHour","mesMin","CloudMessage","h","Date","getHours","getMinutes","Button","buttonName","Checkbox","type","title","checked","callBack","onChange","ListContainer","lists","row","map","list","key","id","changeStatus","status","isDone","removeList","pointer","buttons","button","setPriorityFilter","List","priority","setList","filter","setFilter","priorityListsFilter","filteredLists","console","log","value","CheckboxItem","newList","listsItem","find","InputForm","error","addItem","setError","onChangeItem","restProps","input","onBlur","e","currentTarget","trim","onKeyPress","charCode","InputNameContainer","userNamesArr","setUserNamesArr","inputItem","setItem","userNameArr","v1","userName","alert","addUserName","everyName","n","join","activeBox","listOfNames","Input","length","InputName","PreJunior","Fragment","App","page","app_content","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.bb100b8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__1CUgD\",\"app_content\":\"App_app_content__1BQNY\"};","//@ts-nocheck\r\nimport React, { useState } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './Navbar.module.css';\r\n\r\nconst Navbar = () => {\r\n\r\n    const [isMenu, setMenu] = useState(false);\r\n\r\n    function toggleMenu() {\r\n        setMenu(!isMenu);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.0.12/css/all.css\" integrity=\"sha384-G0fIWCsCzJIMAVNQPfjH08cyYaUtMwjJwqiRKxxE/rx96Uroj1BtIQ6MLJuheaO9\" crossorigin=\"anonymous\"></link>\r\n            <div className={style.navbar} >\r\n                <div onClick={toggleMenu} className={style.menu} >\r\n                        <span className={isMenu ? `${style.btn_active}` \r\n                        : `${style.btn}`}\r\n                        ></span>\r\n                </div>\r\n                <div className={isMenu ? style.navlink_active : style.navlink}>\r\n                    <NavLink to='/prejunior' activeClassName={style.active}>PreJunior</NavLink>\r\n                    <NavLink to='/junior' activeClassName={style.active}>Junior</NavLink>\r\n                    <NavLink to='/juniorplus' activeClassName={style.active}>JuniorPlus</NavLink>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;","//@ts-nocheck\r\nimport React from 'react';\r\n\r\nconst Junior = () => {\r\n    return (\r\n       \r\n        <div><iframe src=\"https://giphy.com/embed/20k1punZ5bpmM\" width=\"600\" height=\"400\"  frameBorder=\"0\" className=\"giphy-embed\" allowFullScreen></iframe>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Junior;","import React from 'react';\r\n\r\nconst JuniorPlus = () => {\r\n    return (\r\n       \r\n        <div >\r\n        <iframe src=\"https://gifer.com/embed/Xj9\" width=\"650\" height=\"400\" frameBorder=\"0\" allowFullScreen></iframe></div>\r\n    )\r\n}\r\nexport default JuniorPlus;","import React from 'react';\r\nimport {StateType} from './CloudMessage';\r\nimport style from './CloudMessage.module.css';\r\nimport './CloudMessage.css';\r\n\r\ntype PropsType = {\r\n    state: StateType\r\n    hours: number\r\n    minutes: number\r\n}\r\n\r\n\r\n\r\nconst CloudMessageContainer: React.FC<PropsType> = (props: PropsType) => {\r\n\r\n    return (\r\n        <div>\r\n        <section className='header'>\r\n            <div className='timeOne'>{props.hours}:{props.minutes}</div>\r\n            <h1 className='name'>Hi! I'm {props.state.name} {props.state.surname}</h1>\r\n        </section>\r\n        <section className='bubble'>\r\n         <div className='avatar'>\r\n             <img src={props.state.img} />\r\n             </div>\r\n              <div className='box1 sb5'>\r\n                        <div className='name'>{props.state.name}</div>\r\n                        <div className='message'>{props.state.message}</div>\r\n                        <div className='time'>{props.state.mesHour}:{props.state.mesMin}</div>\r\n                    </div>\r\n             </section>\r\n             </div>\r\n            )}\r\n\r\nexport default CloudMessageContainer;\r\n\r\n//{`${style.box1} ${style.sb5}`}","import React from 'react';\r\nimport CloudMessageContainer from './CloudMessageContainer';\r\n\r\n\r\n\r\nexport type StateType = {\r\n    img: string\r\n    name: string\r\n    surname: string\r\n    message: string\r\n    mesHour: number\r\n    mesMin: number\r\n};\r\n\r\nexport default function CloudMessage () {\r\n\r\n     let state: StateType = {\r\n        img: `https://cdn.pixabay.com/photo/2016/06/15/16/00/woman-1459220_1280.png`,\r\n        name: 'Ekaterina',\r\n        surname: ' Uchaykina',\r\n        message: \r\n        'Существует теория, которая утверждает, что если однажды кто-нибудь доподлинно выяснит, что такое и для чего нужна Вселенная, она тотчас же исчезнет, и вместо нее появится нечто еще более причудливое и необъяснимое. Существует и другая теория, согласно которой это уже случилось.',\r\n        mesHour: 15,\r\n        mesMin: 16\r\n        };\r\n\r\n        let h = new Date ();\r\n        let hours = h.getHours();\r\n        let minutes = h.getMinutes();\r\n            \r\n    return <CloudMessageContainer state={state} hours={hours} minutes={minutes}/>\r\n    }","import React from 'react';\r\n\r\ntype ButtonAddProps = {\r\n    buttonName: string,\r\n    onClick: () => void,\r\n    //className: string,\r\n    // disabled: boolean,\r\n    // active: boolean,\r\n}\r\n\r\nexport const Button = ({...props}) => {\r\n    return (\r\n    <button  {...props}>{props.buttonName}</button>\r\n    )\r\n}\r\n","\r\n//@ts-nocheck\r\nimport React, { ChangeEvent, DetailedHTMLProps, InputHTMLAttributes } from 'react';\r\n\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype CheckboxPropsType = DefaultInputPropsType & {\r\n    callBack: (e: ChangeEvent<HTMLInputElement>) => void,\r\n    status: boolean,\r\n    title:string\r\n}\r\n\r\n\r\nexport const Checkbox: React.FC<CheckboxPropsType> = (props) => {\r\n    const {\r\n        type,\r\n        title,\r\n        checked,\r\n        callBack,\r\n        ...restProps\r\n    } = props\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type=\"checkbox\"\r\n                onChange={props.callBack}\r\n                {...props}\r\n            />\r\n            <span >{props.title}</span>\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}","import React from 'react';\r\nimport { Button } from '../common/Button';\r\nimport { Checkbox } from '../common/Checkbox';\r\nimport { FilterPriorityType } from './List';\r\nimport style from './Lists.module.css';\r\n\r\ntype PropsType = {\r\n    title: string\r\n    lists: Array<ListType>\r\n    removeList: (listId: number) => void\r\n    setPriorityFilter: (value: FilterPriorityType) => void\r\n    changeStatus: (number: number) => void\r\n}\r\n\r\ntype ListType = {\r\n    id: number\r\n    title: string\r\n    priority: any\r\n    isDone: boolean\r\n}\r\n\r\n\r\nfunction ListContainer (props: PropsType) {\r\n    return (\r\n        <div className={style.lists}>\r\n            <div className={style.title}>{props.title}</div>\r\n            <ul className={style.row}>\r\n                {\r\n                    props.lists.map((list) =>\r\n                        <li key={list.id}>\r\n                            <div className={style.list}>\r\n                                <div>\r\n                                    <div>\r\n                                        <Checkbox callBack={() => props.changeStatus(list.id)}\r\n                                            status={list.isDone}\r\n                                            title={list.title} />\r\n                                    </div>\r\n                                </div>\r\n                                <Button onClick={() => { props.removeList(list.id) }}\r\n                                    buttonName='✘' />\r\n                            </div>\r\n                        </li>)\r\n                }\r\n            </ul>\r\n            <div>\r\n                <div className={style.pointer}>👇</div>\r\n                <div className={style.buttons}>\r\n                    <Button className={style.button}\r\n                        onClick={() => { props.setPriorityFilter('all') }}\r\n                        buttonName='All' />\r\n                    <Button className={style.button}\r\n                        onClick={() => { props.setPriorityFilter('middle') }}\r\n                        buttonName='Middle' />\r\n                    <Button className={style.button}\r\n                        onClick={() => { props.setPriorityFilter('high') }}\r\n                        buttonName='High' />\r\n                    <Button className={style.button}\r\n                        onClick={() => { props.setPriorityFilter('low') }}\r\n                        buttonName='Low' />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ListContainer;","import React, { useState } from 'react';\r\nimport ListContainer from './ListContainer';\r\n\r\n\r\n\r\nexport type FilterPriorityType = 'all' | 'high' | 'middle' | 'low';\r\n\r\nexport default function List() {\r\n\r\n  let [list, setList] = useState([\r\n    { id: 1, title: \"ReactJS\", priority: 'middle', isDone: false },\r\n    { id: 2, title: \"TypeScript\", priority: 'middle', isDone: false },\r\n    { id: 3, title: \"NativeJS\", priority: 'high', isDone: false },\r\n    { id: 4, title: \"Foreign Language\", priority: 'low', isDone: false },\r\n    { id: 5, title: \"Tatoo\", priority: 'high', isDone: false }\r\n  ]);\r\n\r\n  function removeList(id: number) {\r\n    let filteredLists = list.filter(list => list.id != id);\r\n    console.log(filteredLists);\r\n    setList(filteredLists);\r\n  }\r\n\r\n  function changeStatus(CheckboxItem: number) {\r\n    let newList = list;\r\n    const listsItem = newList.find(list => list.id === CheckboxItem);\r\n    if (listsItem) {\r\n      listsItem.isDone = !listsItem.isDone;\r\n      console.log(newList);\r\n      setList(newList);\r\n    }\r\n  }\r\n\r\n\r\n  let [filter, setFilter] = useState<FilterPriorityType>('all');\r\n  let priorityListsFilter = list;\r\n\r\n  if (filter === 'high') {\r\n    priorityListsFilter = list.filter(list => list.priority === 'high');\r\n  }\r\n  if (filter === 'middle') {\r\n    priorityListsFilter = list.filter(list => list.priority === 'middle');\r\n  }\r\n  if (filter === 'low') {\r\n    priorityListsFilter = list.filter(list => list.priority === 'low');\r\n  };\r\n\r\n  function setPriorityFilter(value: FilterPriorityType) {\r\n    setFilter(value);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <ListContainer title='My goals' \r\n        lists={priorityListsFilter}\r\n        removeList={removeList}\r\n        setPriorityFilter={setPriorityFilter} \r\n        changeStatus={changeStatus}\r\n        />\r\n    </>\r\n  )\r\n}\r\n","import React, { KeyboardEvent, ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState } from 'react';\r\nimport style from '../ThirdTask/InputName.module.css';\r\n\r\n// (TypeScript) домашка от меня №4:\r\n// - добавьте в проект домашек папку common - в ней мы будем хранить универсальные компоненты\r\n// <MyInput value={value} onChange={onChange}/> // это универсальная компонента\r\n// <Hello name={name} sayHello={sayHello}/> // это НЕ универсальная компонента, так как работает только с именами\r\n// - эти компоненты должны быть УНИВЕРСАЛЬНЫМИ и иметь красивые стили (создать самому или найти в интернете)\r\n// - добавьте в проект компоненту, в которой отрисуйте эти универсальные компоненты для демонстрации\r\n// - замените в предыдущих домашках стандартные кнопки и инпуты вашими универсальными компонентами, в последующих домашках используйте свои универсальные компоненты вместо стандартных\r\n// задачи со звёздочками:\r\n// * сделайте так чтоб onChange ваших компонент сразу давал нужное значение (value/checked), а не объект ивента\r\n// * добавьте в инпуту пропс для функции, которая будет выполняться по нажатию кнопки Enter\r\n// * добавьте в свою кнопку необязательный пропс для выбора типа кнопки: стандартный (выбран изначально) или красный (для кнопок удаления/отмены/выхода/...), стили для разных типов должны быть разные\r\n// * добавить необязательный пропс error в инпут, в случае передачи в него значения нужно менять стиль инпута на красный\r\n\r\n\r\ntype PropsInputType =\r\n    DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n    & {\r\n        error?: string|null,\r\n        setError?: (value: string | null) => void,\r\n        onChangeItem?: (value: string) => void,\r\n        addItem: () => void\r\n    };\r\n\r\n\r\nconst InputForm = (props: PropsInputType) => {\r\n\r\n    const { error, addItem, setError, onChangeItem, ...restProps } = props;\r\n\r\n    function onChange(e: ChangeEvent<HTMLInputElement>) {\r\n        if (setError && e.currentTarget.value.trim()) { setError(null) }\r\n        onChangeItem && onChangeItem(e.currentTarget.value)\r\n    };\r\n \r\n    function onEnterKeyPress(e: KeyboardEvent<HTMLInputElement>) {\r\n        if (e.charCode === 13) { addItem && addItem() };\r\n    };\r\n    \r\n    function onBlur() {setError && setError(null) };\r\n\r\n\r\n    return (\r\n        <input className={error ? `${style.input} ${style.error}` : 'input'}\r\n            type=\"text\"\r\n            onBlur={onBlur}\r\n            onChange={onChange}\r\n            onKeyPress={onEnterKeyPress}\r\n            {...restProps}\r\n        />\r\n    )\r\n};\r\nexport default InputForm;\r\n","import React, { ChangeEvent, useState, KeyboardEvent } from 'react';\r\nimport style from './InputName.module.css';\r\nimport { NameType } from './InputName';\r\nimport InputForm from '../common/Input'\r\nimport { Button } from '../common/Button';\r\nimport { v1 } from 'uuid';\r\n\r\n\r\nlet count = 0;\r\n\r\nexport default function InputNameContainer() {\r\n\r\n    let [userNamesArr, setUserNamesArr] = useState<Array<NameType>>([]);\r\n    let [inputItem, setItem] = useState('');\r\n    let [error, setError] = useState<string | null>(null);\r\n\r\n    function addUserName(inputItem: string) {\r\n        let userNameArr = { id: v1(), userName: inputItem.trim() };\r\n        setUserNamesArr([userNameArr, ...userNamesArr]);\r\n        alert(`Hi${userNameArr.userName}!`);\r\n        setItem('');\r\n    };\r\n\r\n    const addItem = () => {\r\n        if (inputItem.trim() !== '') {\r\n            addUserName(inputItem);\r\n            setItem('');\r\n            count++;\r\n        } else {\r\n            setError('Enter your name 🥺');\r\n            } \r\n    };\r\n    const everyName = userNamesArr.map(n => n.userName).join(`/ `);\r\n\r\n    return (\r\n        <div className={style.activeBox}>\r\n            <h1 className={style.title}>What's your name?</h1>\r\n            <div className={style.listOfNames}>\r\n                <InputForm\r\n                    value={inputItem}\r\n                    error={error}\r\n                    setError={setError}\r\n                    addItem={addItem}\r\n                    onChangeItem={setItem}\r\n                    />\r\n                <Button onClick={addItem} buttonName=\"Send\" />\r\n                <div>\r\n                <span >Total users - {userNamesArr.length}</span>\r\n                </div>\r\n                    <span className={style.listOfNames}> {everyName} </span>\r\n                    <div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport InputNameContainer from './InputNameContainer';\r\n\r\n\r\nexport type NameType = {id: string, userName: string};\r\n\r\nexport default function InputName () {\r\n\r\n    return (\r\n        <div>\r\n           < InputNameContainer />  \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","\r\nimport React from 'react';\r\nimport CloudMessage from '../FirstTask/CloudMessage';\r\nimport List from '../SecondTask/List';\r\nimport InputName from '../ThirdTask/InputName';\r\n\r\nconst PreJunior = () => {\r\n    return (\r\n        <React.Fragment>\r\n            <CloudMessage />\r\n            <List />\r\n            <InputName />\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PreJunior;","import React, { useState } from 'react';\nimport { HashRouter, Route } from 'react-router-dom';\nimport style from './App.module.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Junior from './components/pages/Junior';\nimport JuniorPlus from './components/pages/JuniorPlus';\nimport PreJunior from './components/pages/PreJunior';\n\n\nexport default function App() {\n\n  return (\n    <HashRouter>\n      <div className={style.page}>\n      <Navbar />\n      <div className={style.app_content}>\n      \n        <Route path='/prejunior' component={PreJunior} />\n        <Route path='/junior' component={Junior} />\n        <Route path='/juniorplus' component={JuniorPlus} />\n      </div>\n      </div>\n    </HashRouter>\n  );\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lists\":\"Lists_lists__1BgLI\",\"list\":\"Lists_list__3zEyE\",\"title\":\"Lists_title__2yQ7D\",\"row\":\"Lists_row__AM4Qc\",\"buttons\":\"Lists_buttons__1Y3Yf\",\"pointer\":\"Lists_pointer__70egW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navlink\":\"Navbar_navlink__1eF6m\",\"navlink_active\":\"Navbar_navlink_active__378uW\",\"active\":\"Navbar_active__2rFS9\",\"navbar\":\"Navbar_navbar__3zPed\",\"menu\":\"Navbar_menu__25b30\",\"btn\":\"Navbar_btn__37eOQ\",\"btn_active\":\"Navbar_btn_active__3udef\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"activeBox\":\"InputName_activeBox__3zez8\",\"title\":\"InputName_title__z-0Np\",\"listOfNames\":\"InputName_listOfNames__1TEBG\",\"input\":\"InputName_input__2QgiS\",\"error\":\"InputName_error__3oiGP\"};"],"sourceRoot":""}